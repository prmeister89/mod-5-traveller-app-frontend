{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactLifecyclesCompat = require('react-lifecycles-compat');\n\nvar _makeEventProps = require('make-event-props');\n\nvar _makeEventProps2 = _interopRequireDefault(_makeEventProps);\n\nvar _mergeClassNames = require('merge-class-names');\n\nvar _mergeClassNames2 = _interopRequireDefault(_mergeClassNames);\n\nvar _detectElementOverflow = require('detect-element-overflow');\n\nvar _detectElementOverflow2 = _interopRequireDefault(_detectElementOverflow);\n\nvar _entry = require('react-clock/dist/entry.nostyle');\n\nvar _entry2 = _interopRequireDefault(_entry);\n\nvar _TimeInput = require('./TimeInput');\n\nvar _TimeInput2 = _interopRequireDefault(_TimeInput);\n\nvar _propTypes3 = require('./shared/propTypes');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar allViews = ['hour', 'minute', 'second'];\nvar baseClassName = 'react-time-picker';\n\nvar TimePicker = function (_PureComponent) {\n  _inherits(TimePicker, _PureComponent);\n\n  function TimePicker() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TimePicker);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TimePicker.__proto__ || Object.getPrototypeOf(TimePicker)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.onClick = function (event) {\n      if (_this.wrapper && !_this.wrapper.contains(event.target)) {\n        _this.closeClock();\n      }\n    }, _this.openClock = function () {\n      _this.setState({\n        isOpen: true\n      });\n    }, _this.closeClock = function () {\n      _this.setState(function (prevState) {\n        if (!prevState.isOpen) {\n          return null;\n        }\n\n        return {\n          isOpen: false\n        };\n      });\n    }, _this.toggleClock = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpen: !prevState.isOpen\n        };\n      });\n    }, _this.onChange = function (value) {\n      var closeClock = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      _this.setState({\n        isOpen: !closeClock\n      });\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(value);\n      }\n    }, _this.onFocus = function (event) {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          onFocus = _this$props.onFocus;\n\n      if (onFocus) {\n        onFocus(event);\n      } // Internet Explorer still fires onFocus on disabled elements\n\n\n      if (disabled) {\n        return;\n      }\n\n      _this.openClock();\n    }, _this.stopPropagation = function (event) {\n      return event.stopPropagation();\n    }, _this.clear = function () {\n      return _this.onChange(null);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TimePicker, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      document.addEventListener('mousedown', this.onClick);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      document.removeEventListener('mousedown', this.onClick);\n    }\n  }, {\n    key: 'renderInputs',\n    value: function renderInputs() {\n      var _props = this.props,\n          clearIcon = _props.clearIcon,\n          clockIcon = _props.clockIcon,\n          disableClock = _props.disableClock,\n          disabled = _props.disabled,\n          isOpen = _props.isOpen,\n          locale = _props.locale,\n          maxDetail = _props.maxDetail,\n          maxTime = _props.maxTime,\n          minTime = _props.minTime,\n          name = _props.name,\n          required = _props.required,\n          value = _props.value;\n      return _react2.default.createElement('div', {\n        className: baseClassName + '__wrapper'\n      }, _react2.default.createElement(_TimeInput2.default, {\n        className: baseClassName + '__inputGroup',\n        disabled: disabled,\n        locale: locale,\n        isClockOpen: isOpen,\n        maxDetail: maxDetail,\n        maxTime: maxTime,\n        minTime: minTime,\n        name: name,\n        onChange: this.onChange,\n        placeholder: this.placeholder,\n        required: required,\n        value: value\n      }), clearIcon !== null && _react2.default.createElement('button', {\n        className: baseClassName + '__clear-button ' + baseClassName + '__button',\n        disabled: disabled,\n        onClick: this.clear,\n        onFocus: this.stopPropagation,\n        type: 'button'\n      }, clearIcon), clockIcon !== null && !disableClock && _react2.default.createElement('button', {\n        className: baseClassName + '__clock-button ' + baseClassName + '__button',\n        disabled: disabled,\n        onClick: this.toggleClock,\n        onFocus: this.stopPropagation,\n        onBlur: this.resetValue,\n        type: 'button'\n      }, clockIcon));\n    }\n  }, {\n    key: 'renderClock',\n    value: function renderClock() {\n      var disableClock = this.props.disableClock;\n      var isOpen = this.state.isOpen;\n\n      if (isOpen === null || disableClock) {\n        return null;\n      }\n\n      var _props2 = this.props,\n          clockClassName = _props2.clockClassName,\n          timePickerClassName = _props2.className,\n          maxDetail = _props2.maxDetail,\n          onChange = _props2.onChange,\n          clockProps = _objectWithoutProperties(_props2, ['clockClassName', 'className', 'maxDetail', 'onChange']);\n\n      var className = baseClassName + '__clock';\n      var maxDetailIndex = allViews.indexOf(maxDetail);\n      return _react2.default.createElement('div', {\n        className: (0, _mergeClassNames2.default)(className, className + '--' + (isOpen ? 'open' : 'closed')),\n        ref: function ref(_ref2) {\n          if (!_ref2) {\n            return;\n          }\n\n          _ref2.classList.remove(className + '--above-label');\n\n          var collisions = (0, _detectElementOverflow2.default)(_ref2, document.body);\n\n          if (collisions.collidedBottom) {\n            _ref2.classList.add(className + '--above-label');\n          }\n        }\n      }, _react2.default.createElement(_entry2.default, _extends({\n        className: clockClassName,\n        renderMinuteHand: maxDetailIndex > 0,\n        renderSecondHand: maxDetailIndex > 1\n      }, clockProps)));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props3 = this.props,\n          className = _props3.className,\n          disabled = _props3.disabled;\n      var isOpen = this.state.isOpen;\n      return _react2.default.createElement('div', _extends({\n        className: (0, _mergeClassNames2.default)(baseClassName, baseClassName + '--' + (isOpen ? 'open' : 'closed'), baseClassName + '--' + (disabled ? 'disabled' : 'enabled'), className)\n      }, this.eventProps, {\n        onFocus: this.onFocus,\n        ref: function ref(_ref3) {\n          _this2.wrapper = _ref3;\n        }\n      }), this.renderInputs(), this.renderClock());\n    }\n  }, {\n    key: 'eventProps',\n    get: function get() {\n      return (0, _makeEventProps2.default)(this.props);\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isOpen !== prevState.isOpenProps) {\n        return {\n          isOpen: nextProps.isOpen,\n          isOpenProps: nextProps.isOpen\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return TimePicker;\n}(_react.PureComponent);\n\nexports.default = TimePicker;\n\nvar ClockIcon = _react2.default.createElement('svg', {\n  xmlns: 'http://www.w3.org/2000/svg',\n  width: '19',\n  height: '19',\n  viewBox: '0 0 19 19'\n}, _react2.default.createElement('g', {\n  stroke: 'black',\n  strokeWidth: '2',\n  fill: 'none'\n}, _react2.default.createElement('circle', {\n  cx: '9.5',\n  cy: '9.5',\n  r: '7.5'\n}), _react2.default.createElement('path', {\n  d: 'M9.5 4.5 v5 h4'\n})));\n\nvar ClearIcon = _react2.default.createElement('svg', {\n  xmlns: 'http://www.w3.org/2000/svg',\n  width: '19',\n  height: '19',\n  viewBox: '0 0 19 19'\n}, _react2.default.createElement('g', {\n  stroke: 'black',\n  strokeWidth: '2'\n}, _react2.default.createElement('line', {\n  x1: '4',\n  y1: '4',\n  x2: '15',\n  y2: '15'\n}), _react2.default.createElement('line', {\n  x1: '15',\n  y1: '4',\n  x2: '4',\n  y2: '15'\n})));\n\nTimePicker.defaultProps = {\n  clearIcon: ClearIcon,\n  clockIcon: ClockIcon,\n  isOpen: null,\n  maxDetail: 'minute'\n};\nTimePicker.propTypes = _extends({}, _entry2.default.propTypes, {\n  clockClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.string)]),\n  clockIcon: _propTypes2.default.node,\n  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.string)]),\n  clearIcon: _propTypes2.default.node,\n  disabled: _propTypes2.default.bool,\n  disableClock: _propTypes2.default.bool,\n  isOpen: _propTypes2.default.bool,\n  locale: _propTypes2.default.string,\n  maxDetail: _propTypes2.default.oneOf(allViews),\n  maxTime: _propTypes3.isTime,\n  minTime: _propTypes3.isTime,\n  name: _propTypes2.default.string,\n  onChange: _propTypes2.default.func,\n  required: _propTypes2.default.bool,\n  value: _propTypes2.default.oneOfType([_propTypes3.isTime, _propTypes2.default.instanceOf(Date)])\n});\n(0, _reactLifecyclesCompat.polyfill)(TimePicker);","map":null,"metadata":{},"sourceType":"script"}