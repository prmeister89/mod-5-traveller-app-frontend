{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/The_Construct/traveller/traveller-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from 'redux';\n\nvar searchTextReducer = function searchTextReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_SEARCH_TEXT\":\n      return action.value;\n\n    default:\n      return state;\n  }\n};\n\nvar tripsReducer = function tripsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"TRIP_ADDED\":\n      return _toConsumableArray(state).concat([action.trip]);\n\n    case \"LUGGAGE_ITEM_ADDED\":\n      return _toConsumableArray(state).concat([action.newLuggageItem]);\n\n    case \"UPDATE_LUGGAGE\":\n      return _toConsumableArray(state.luggage).concat([action.item]);\n\n    case \"TRIP_UPDATED\":\n      return state.map(function (trip) {\n        if (trip.id === action.trip.id) {\n          return action.trip;\n        } else {\n          return trip;\n        }\n      });\n\n    case \"FETCHED_TRIPS\":\n      return action.trips;\n\n    default:\n      return state;\n  }\n};\n\nvar loadingReducer = function loadingReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCHING_TRIPS\":\n      return true;\n\n    case \"FETCHED_TRIPS\":\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  searchText: searchTextReducer,\n  trips: tripsReducer,\n  loading: loadingReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/flatironschool/The_Construct/traveller/traveller-frontend/src/redux/reducers.js"],"names":["combineReducers","searchTextReducer","state","action","type","value","tripsReducer","trip","newLuggageItem","luggage","item","map","id","trips","loadingReducer","rootReducer","searchText","loading"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AACE,aAAOD,MAAM,CAACE,KAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD;;AASA,IAAMI,YAAY,GAAG,SAAfA,YAAe,GAAwB;AAAA,MAAvBJ,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,gCAAWF,KAAX,UAAkBC,MAAM,CAACI,IAAzB;;AACF,SAAK,oBAAL;AACE,gCAAWL,KAAX,UAAkBC,MAAM,CAACK,cAAzB;;AACF,SAAK,gBAAL;AACE,gCAAWN,KAAK,CAACO,OAAjB,UAA0BN,MAAM,CAACO,IAAjC;;AACF,SAAK,cAAL;AACE,aAAOR,KAAK,CAACS,GAAN,CAAU,UAAAJ,IAAI,EAAI;AACvB,YAAIA,IAAI,CAACK,EAAL,KAAYT,MAAM,CAACI,IAAP,CAAYK,EAA5B,EAAgC;AAC9B,iBAAOT,MAAM,CAACI,IAAd;AACD,SAFD,MAEO;AACL,iBAAOA,IAAP;AACD;AACF,OANM,CAAP;;AAOF,SAAK,eAAL;AACE,aAAOJ,MAAM,CAACU,KAAd;;AACF;AACE,aAAOX,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,IAAMY,cAAc,GAAG,SAAjBA,cAAiB,GAA2B;AAAA,MAA1BZ,KAA0B,uEAAlB,KAAkB;AAAA,MAAXC,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,IAAP;;AACF,SAAK,eAAL;AACE,aAAO,KAAP;;AACF;AACE,aAAOF,KAAP;AANJ;AAQD,CATD;;AAWA,IAAMa,WAAW,GAAGf,eAAe,CAAC;AAClCgB,EAAAA,UAAU,EAAEf,iBADsB;AAElCY,EAAAA,KAAK,EAAEP,YAF2B;AAGlCW,EAAAA,OAAO,EAAEH;AAHyB,CAAD,CAAnC;AAMA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from 'redux';\n\n\nconst searchTextReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"CHANGE_SEARCH_TEXT\":\n      return action.value;\n    default:\n      return state\n  }\n}\n\nconst tripsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"TRIP_ADDED\":\n      return [...state, action.trip];\n    case \"LUGGAGE_ITEM_ADDED\":\n      return [...state, action.newLuggageItem];\n    case \"UPDATE_LUGGAGE\":\n      return [...state.luggage, action.item];\n    case \"TRIP_UPDATED\":\n      return state.map(trip => {\n        if (trip.id === action.trip.id) {\n          return action.trip;\n        } else {\n          return trip;\n        }\n      });\n    case \"FETCHED_TRIPS\":\n      return action.trips;\n    default:\n      return state;\n  }\n}\n\nconst loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"FETCHING_TRIPS\":\n      return true;\n    case \"FETCHED_TRIPS\":\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  searchText: searchTextReducer,\n  trips: tripsReducer,\n  loading: loadingReducer\n})\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}