{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _chevronLeft = _interopRequireDefault(require(\"react-icons/lib/md/chevron-left\"));\n\nvar _chevronRight = _interopRequireDefault(require(\"react-icons/lib/md/chevron-right\"));\n\nvar _CalendarUI = require(\"./CalendarUI\");\n\nvar _Calendar = require(\"./Calendar\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nvar GridItem = function GridItem(_ref) {\n  var _onClick = _ref.onClick,\n      day = _ref.day,\n      date = _ref.date,\n      children = _ref.children,\n      disabled = _ref.disabled,\n      marker = _ref.marker;\n  return _react.default.createElement(_CalendarUI.DayGridItem, {\n    active: day.day.isSame(date),\n    onClick: function onClick() {\n      return _onClick(day.day);\n    },\n    nextMonth: day.nextMonth,\n    prevMonth: day.prevMonth,\n    disabled: disabled,\n    marker: marker\n  }, children);\n};\n\nGridItem.propTypes = {\n  onClick: _propTypes.default.func.isRequired,\n  day: _propTypes.default.object.isRequired,\n  // eslint-disable-line react/forbid-prop-types\n  date: _propTypes.default.object.isRequired,\n  // eslint-disable-line react/forbid-prop-types\n  children: _propTypes.default.string.isRequired,\n  disabled: _propTypes.default.bool.isRequired,\n  marker: _propTypes.default.bool.isRequired\n};\n\nvar createDateObjects = function createDateObjects(startOfMonth, weekOffset) {\n  var diff = startOfMonth.isoWeekday() - weekOffset;\n  if (diff < 0) diff += 7;\n  var prevMonthDays = [];\n\n  for (var _i = 0; _i < diff; _i += 1) {\n    prevMonthDays.push({\n      day: startOfMonth.clone().subtract(diff - _i, 'days'),\n      prevMonth: true\n    });\n  }\n\n  var currentMonthDays = [];\n\n  for (var _i2 = 1; _i2 < startOfMonth.daysInMonth() + 1; _i2 += 1) {\n    currentMonthDays.push({\n      day: (0, _moment.default)([startOfMonth.year(), startOfMonth.month(), _i2])\n    });\n  }\n\n  var daysAdded = prevMonthDays.length + currentMonthDays.length - 1;\n  var nextMonthDays = [];\n  var i = 1;\n\n  while (daysAdded + i < 42) {\n    nextMonthDays.push({\n      day: currentMonthDays[currentMonthDays.length - 1].day.clone().add(i, 'days'),\n      nextMonth: true\n    });\n    i += 1;\n  }\n\n  return prevMonthDays.concat(currentMonthDays, nextMonthDays);\n};\n\nvar DayView = function DayView(_ref2) {\n  var weekOffset = _ref2.weekOffset,\n      locale = _ref2.locale,\n      calendarMonth = _ref2.calendarMonth,\n      onChange = _ref2.onChange,\n      min = _ref2.min,\n      max = _ref2.max,\n      dateFormat = _ref2.dateFormat,\n      markers = _ref2.markers,\n      date = _ref2.date,\n      keyValid = _ref2.keyValid,\n      handlePrevMonth = _ref2.handlePrevMonth,\n      handleNextMonth = _ref2.handleNextMonth,\n      handlePrevYear = _ref2.handlePrevYear,\n      handleNextYear = _ref2.handleNextYear,\n      updateCalendarView = _ref2.updateCalendarView;\n  return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_CalendarUI.Header, null, _react.default.createElement(_CalendarUI.MonthSwitch, null, _react.default.createElement(_chevronLeft.default, {\n    onClick: handlePrevMonth\n  }), _react.default.createElement(_CalendarUI.MonthLabel, {\n    onClick: function onClick() {\n      return updateCalendarView(_Calendar.VIEWS.MONTH_VIEW);\n    }\n  }, calendarMonth.locale(locale).format('MMMM')), _react.default.createElement(_chevronRight.default, {\n    onClick: handleNextMonth\n  })), _react.default.createElement(_CalendarUI.YearSwitch, null, _react.default.createElement(_chevronLeft.default, {\n    onClick: handlePrevYear\n  }), _react.default.createElement(_CalendarUI.YearLabel, {\n    onClick: function onClick() {\n      return updateCalendarView(_Calendar.VIEWS.YEAR_VIEW);\n    }\n  }, calendarMonth.locale(locale).format('YYYY')), _react.default.createElement(_chevronRight.default, {\n    onClick: handleNextYear\n  }))), _react.default.createElement(_CalendarUI.WeekDays, null, Array(7).fill().map(function (_, i) {\n    return i + weekOffset;\n  }).map(function (weekDay) {\n    return _react.default.createElement(_CalendarUI.StyledGridItem, {\n      key: \"week-day-\".concat(weekDay)\n    }, (0, _moment.default)().isoWeekday(weekDay).locale(locale).format('dd'));\n  })), _react.default.createElement(_CalendarUI.Days, null, createDateObjects(calendarMonth, weekOffset).map(function (day) {\n    return _react.default.createElement(GridItem, {\n      key: \"day-\".concat(day.day.format('DD.MM')),\n      day: day,\n      date: date,\n      onClick: onChange,\n      disabled: !keyValid(day.day, min, max, dateFormat),\n      marker: markers.includes(day.day.format(dateFormat))\n    }, day.day.format('D'));\n  })));\n};\n\nDayView.propTypes = {\n  weekOffset: _propTypes.default.number.isRequired,\n  locale: _propTypes.default.string.isRequired,\n  min: _propTypes.default.string,\n  max: _propTypes.default.string,\n  dateFormat: _propTypes.default.string.isRequired,\n  markers: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,\n  keyValid: _propTypes.default.func.isRequired,\n  calendarMonth: _propTypes.default.object.isRequired,\n  // eslint-disable-line react/forbid-prop-types\n  onChange: _propTypes.default.func.isRequired,\n  date: _propTypes.default.object.isRequired,\n  // eslint-disable-line react/forbid-prop-types\n  handlePrevMonth: _propTypes.default.func.isRequired,\n  handleNextMonth: _propTypes.default.func.isRequired,\n  handlePrevYear: _propTypes.default.func.isRequired,\n  handleNextYear: _propTypes.default.func.isRequired,\n  updateCalendarView: _propTypes.default.func.isRequired\n};\nDayView.defaultProps = {\n  min: undefined,\n  max: undefined\n};\nvar _default = DayView;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}