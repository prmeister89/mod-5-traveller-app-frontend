{"ast":null,"code":"import _defineProperty from \"/Users/flatironschool/The_Construct/traveller/traveller-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/flatironschool/The_Construct/traveller/traveller-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/The_Construct/traveller/traveller-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/The_Construct/traveller/traveller-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/The_Construct/traveller/traveller-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/The_Construct/traveller/traveller-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/The_Construct/traveller/traveller-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/The_Construct/traveller/traveller-frontend/src/components/LuggageForm.js\";\nimport React, { Component } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateLuggageItems } from '../redux/actions';\n\nvar LuggageForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LuggageForm, _Component);\n\n  function LuggageForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LuggageForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LuggageForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      item: \"\"\n    };\n\n    _this.handleOnSubmit = function (e) {\n      var newItem = _this.state.item;\n\n      var luggageArray = _toConsumableArray(_this.props.trip.luggage).concat([newItem]);\n\n      e.preventDefault();\n      var payload = {\n        luggageArray: luggageArray\n      };\n\n      _this.props.updateLuggageItems({\n        payload: payload,\n        tripId: _this.props.trip.id\n      });\n\n      _this.props.history.push(\"/trips/\" + _this.props.trip.id + \"/luggage\");\n    };\n\n    _this.handleOnChange = function (e) {\n      e.persist();\n\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(LuggageForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"ui form\",\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui horizontal fields\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"ui field\",\n        type: \"text\",\n        placeholder: \"Add Luggage Item\",\n        name: \"item\",\n        value: this.state.item,\n        onChange: this.handleOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.trip && props.trip.id !== state.id) {\n        return {\n          luggage: props.luggage\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return LuggageForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var trip = state.trips.find(function (t) {\n    return t.id === Number(props.tripId);\n  });\n  return {\n    trip: trip\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  updateLuggageItems: updateLuggageItems\n})(LuggageForm)); // <div className='ui field'>\n// <select className='ui fluid dropdown' onChange={this.handleOnChange}>\n// <option value=\"\">Qty.</option>\n// <option name='itemCount' value=\"1\">1</option>\n// <option name='itemCount' value=\"2\">2</option>\n// <option name='itemCount' value=\"3\">3</option>\n// <option name='itemCount' value=\"4\">4</option>\n// <option name='itemCount' value=\"5\">5</option>\n// </select>\n// </div>\n// increaseItems = () => {\n//   this.setState({\n//     numberOfItems: this.state.numberOfItems + 1\n//   });\n// };\n// <button className='ui left floated green basic button' onClick={this.increaseItems}>\n// <i className='plus circle icon'></i>\n// Add Item\n// </button>","map":{"version":3,"sources":["/Users/flatironschool/The_Construct/traveller/traveller-frontend/src/components/LuggageForm.js"],"names":["React","Component","NavLink","withRouter","connect","updateLuggageItems","LuggageForm","state","item","handleOnSubmit","e","newItem","luggageArray","props","trip","luggage","preventDefault","payload","tripId","id","history","push","handleOnChange","persist","setState","target","name","value","mapStateToProps","trips","find","t","Number"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;IAGMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;UAaRC,c,GAAiB,UAAAC,CAAC,EAAI;AACpB,UAAMC,OAAO,GAAG,MAAKJ,KAAL,CAAWC,IAA3B;;AACA,UAAMI,YAAY,sBACb,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,OADH,UAEhBJ,OAFgB,EAAlB;;AAKAD,MAAAA,CAAC,CAACM,cAAF;AACA,UAAIC,OAAO,GAAG;AACZL,QAAAA,YAAY,EAAEA;AADF,OAAd;;AAGA,YAAKC,KAAL,CAAWR,kBAAX,CAA8B;AAC5BY,QAAAA,OAAO,EAAPA,OAD4B;AAE5BC,QAAAA,MAAM,EAAE,MAAKL,KAAL,CAAWC,IAAX,CAAgBK;AAFI,OAA9B;;AAIA,YAAKN,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,YAAY,MAAKR,KAAL,CAAWC,IAAX,CAAgBK,EAA5B,GAAiC,UAAzD;AACD,K;;UAEDG,c,GAAiB,UAACZ,CAAD,EAAO;AACtBA,MAAAA,CAAC,CAACa,OAAF;;AACA,YAAKC,QAAL,qBACGd,CAAC,CAACe,MAAF,CAASC,IADZ,EACmBhB,CAAC,CAACe,MAAF,CAASE,KAD5B;AAGD,K;;;;;;;6BAEQ;AACP,aACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,QAAQ,EAAE,KAAKlB,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACA,QAAA,SAAS,EAAC,UADV;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,WAAW,EAAC,kBAHZ;AAIA,QAAA,IAAI,EAAC,MAJL;AAKA,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IALlB;AAMA,QAAA,QAAQ,EAAE,KAAKc,cANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CADF;AAgBD;;;6CAnD+BT,K,EAAON,K,EAAO;AAC5C,UAAIM,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWK,EAAX,KAAkBZ,KAAK,CAACY,EAA1C,EAA8C;AAC5C,eAAO;AACPJ,UAAAA,OAAO,EAAEF,KAAK,CAACE;AADR,SAAP;AAGD;;AACD,aAAO,IAAP;AACD;;;;EAZuBd,S;;AA2D1B,IAAM2B,eAAe,GAAG,SAAlBA,eAAkB,CAACrB,KAAD,EAAQM,KAAR,EAAkB;AACxC,MAAIC,IAAI,GAAGP,KAAK,CAACsB,KAAN,CAAYC,IAAZ,CAAiB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACZ,EAAF,KAASa,MAAM,CAACnB,KAAK,CAACK,MAAP,CAAnB;AAAA,GAAlB,CAAX;AACA,SAAO;AACLJ,IAAAA,IAAI,EAAEA;AADD,GAAP;AAGD,CALD;;AAOA,eAAeX,UAAU,CAACC,OAAO,CAACwB,eAAD,EAAkB;AAAEvB,EAAAA,kBAAkB,EAAlBA;AAAF,CAAlB,CAAP,CAAiDC,WAAjD,CAAD,CAAzB,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateLuggageItems } from '../redux/actions';\n\n\nclass LuggageForm extends Component {\n  state = {\n    item: \"\"\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.trip && props.trip.id !== state.id) {\n      return {\n      luggage: props.luggage\n      };\n    }\n    return null;\n  }\n\n  handleOnSubmit = e => {\n    const newItem = this.state.item;\n    const luggageArray = [\n      ...this.props.trip.luggage,\n      newItem\n    ];\n\n    e.preventDefault();\n    let payload = {\n      luggageArray: luggageArray\n    };\n    this.props.updateLuggageItems({\n      payload,\n      tripId: this.props.trip.id\n    });\n    this.props.history.push(\"/trips/\" + this.props.trip.id + \"/luggage\");\n  };\n\n  handleOnChange = (e) => {\n    e.persist();\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <form className='ui form' onSubmit={this.handleOnSubmit}>\n        <div className='ui horizontal fields'>\n          <div className='ui field'>\n            <input\n            className='ui field'\n            type='text'\n            placeholder='Add Luggage Item'\n            name='item'\n            value={this.state.item}\n            onChange={this.handleOnChange}\n            />\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  let trip = state.trips.find(t => t.id === Number(props.tripId))\n  return {\n    trip: trip\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, { updateLuggageItems })(LuggageForm));\n\n\n\n\n\n\n\n\n\n\n// <div className='ui field'>\n// <select className='ui fluid dropdown' onChange={this.handleOnChange}>\n// <option value=\"\">Qty.</option>\n// <option name='itemCount' value=\"1\">1</option>\n// <option name='itemCount' value=\"2\">2</option>\n// <option name='itemCount' value=\"3\">3</option>\n// <option name='itemCount' value=\"4\">4</option>\n// <option name='itemCount' value=\"5\">5</option>\n// </select>\n// </div>\n\n\n// increaseItems = () => {\n//   this.setState({\n//     numberOfItems: this.state.numberOfItems + 1\n//   });\n// };\n\n\n// <button className='ui left floated green basic button' onClick={this.increaseItems}>\n// <i className='plus circle icon'></i>\n// Add Item\n// </button>\n"]},"metadata":{},"sourceType":"module"}