{"ast":null,"code":"import _objectSpread from \"/Users/flatironschool/The_Construct/traveller/traveller-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/flatironschool/The_Construct/traveller/traveller-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from 'redux';\n\nvar searchTextReducer = function searchTextReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_SEARCH_TEXT\":\n      return action.value;\n\n    default:\n      return state;\n  }\n};\n\nvar specificTripReducer = function specificTripReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  // console.log(\"state:\", state, \"action:\", action)\n  var newLuggageArray = [];\n\n  switch (action.type) {\n    case \"FETCHED_SPECIFIC_TRIP\":\n      return action.trip;\n\n    case \"FETCHED_SPECIFIC_TRIP_LUGGAGE_LIST\":\n      return action.tripLuggageList;\n\n    case \"LUGGAGE_ITEM_ADDED\":\n      newLuggageArray = _toConsumableArray(state.luggages).concat([action.newItem]);\n      return _objectSpread({}, state, {\n        luggages: newLuggageArray\n      });\n\n    case \"LUGGAGE_ITEM_DELETED\":\n      newLuggageArray = state.luggages.filter(function (item) {\n        return item.id !== action.item.id;\n      });\n      return _objectSpread({}, state, {\n        luggages: newLuggageArray\n      });\n\n    case \"UPDATE_LUGGAGE\":\n      return _toConsumableArray(state.luggages).concat([action.item]);\n\n    default:\n      return state;\n  }\n};\n\nvar tripsReducer = function tripsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"TRIP_ADDED\":\n      return _toConsumableArray(state).concat([action.trip]);\n\n    case \"TRIP_UPDATED\":\n      return state.map(function (trip) {\n        if (trip.id === action.trip.id) {\n          return action.trip;\n        } else {\n          return trip;\n        }\n      });\n\n    case \"FETCHED_TRIPS\":\n      return action.trips;\n\n    default:\n      return state;\n  }\n};\n\nvar loadingReducer = function loadingReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCHING_TRIPS\":\n      return true;\n\n    case \"FETCHED_TRIPS\":\n      return false;\n\n    case \"FETCHING_SPECIFIC_TRIP\":\n      return true;\n\n    case \"FETCHED_SPECIFIC_TRIP\":\n      return false;\n\n    case \"FETCHING_SPECIFIC_TRIP_LUGGAGE_LIST\":\n      return true;\n\n    case \"FETCHED_SPECIFIC_TRIP_LUGGAGE_LIST\":\n      return false;\n\n    case \"FETCHING_SPECIFIC_TRIP_FLIGHT_INFO_LIST\":\n      return true;\n\n    case \"FETCHED_SPECIFIC_TRIP_FLIGHT_INFO_LIST\":\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  searchText: searchTextReducer,\n  trips: tripsReducer,\n  loading: loadingReducer,\n  specificTrip: specificTripReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/flatironschool/The_Construct/traveller/traveller-frontend/src/redux/reducers.js"],"names":["combineReducers","searchTextReducer","state","action","type","value","specificTripReducer","newLuggageArray","trip","tripLuggageList","luggages","newItem","filter","item","id","tripsReducer","map","trips","loadingReducer","rootReducer","searchText","loading","specificTrip"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AACE,aAAOD,MAAM,CAACE,KAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD;;AASA,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAwB;AAAA,MAAvBJ,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAClD;AACA,MAAII,eAAe,GAAG,EAAtB;;AACA,UAAQJ,MAAM,CAACC,IAAf;AACE,SAAK,uBAAL;AACE,aAAOD,MAAM,CAACK,IAAd;;AACF,SAAK,oCAAL;AACE,aAAOL,MAAM,CAACM,eAAd;;AACF,SAAK,oBAAL;AACEF,MAAAA,eAAe,sBAAOL,KAAK,CAACQ,QAAb,UAAuBP,MAAM,CAACQ,OAA9B,EAAf;AACA,+BAAWT,KAAX;AAAkBQ,QAAAA,QAAQ,EAAEH;AAA5B;;AACF,SAAK,sBAAL;AACEA,MAAAA,eAAe,GAAGL,KAAK,CAACQ,QAAN,CAAeE,MAAf,CAAsB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACU,IAAP,CAAYC,EAA5B;AAAA,OAA1B,CAAlB;AACA,+BAAWZ,KAAX;AAAkBQ,QAAAA,QAAQ,EAAEH;AAA5B;;AACF,SAAK,gBAAL;AACE,gCAAWL,KAAK,CAACQ,QAAjB,UAA2BP,MAAM,CAACU,IAAlC;;AACF;AACE,aAAOX,KAAP;AAdJ;AAgBD,CAnBD;;AAqBA,IAAMa,YAAY,GAAG,SAAfA,YAAe,GAAwB;AAAA,MAAvBb,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,gCAAWF,KAAX,UAAkBC,MAAM,CAACK,IAAzB;;AACF,SAAK,cAAL;AACE,aAAON,KAAK,CAACc,GAAN,CAAU,UAAAR,IAAI,EAAI;AACvB,YAAIA,IAAI,CAACM,EAAL,KAAYX,MAAM,CAACK,IAAP,CAAYM,EAA5B,EAAgC;AAC9B,iBAAOX,MAAM,CAACK,IAAd;AACD,SAFD,MAEO;AACL,iBAAOA,IAAP;AACD;AACF,OANM,CAAP;;AAOF,SAAK,eAAL;AACE,aAAOL,MAAM,CAACc,KAAd;;AACF;AACE,aAAOf,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,IAAMgB,cAAc,GAAG,SAAjBA,cAAiB,GAA2B;AAAA,MAA1BhB,KAA0B,uEAAlB,KAAkB;AAAA,MAAXC,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,IAAP;;AACF,SAAK,eAAL;AACE,aAAO,KAAP;;AACF,SAAK,wBAAL;AACE,aAAO,IAAP;;AACF,SAAK,uBAAL;AACE,aAAO,KAAP;;AACF,SAAK,qCAAL;AACE,aAAO,IAAP;;AACF,SAAK,oCAAL;AACE,aAAO,KAAP;;AACF,SAAK,yCAAL;AACE,aAAO,IAAP;;AACF,SAAK,wCAAL;AACE,aAAO,KAAP;;AACF;AACE,aAAOF,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,IAAMiB,WAAW,GAAGnB,eAAe,CAAC;AAClCoB,EAAAA,UAAU,EAAEnB,iBADsB;AAElCgB,EAAAA,KAAK,EAAEF,YAF2B;AAGlCM,EAAAA,OAAO,EAAEH,cAHyB;AAIlCI,EAAAA,YAAY,EAAEhB;AAJoB,CAAD,CAAnC;AAOA,eAAea,WAAf","sourcesContent":["import { combineReducers } from 'redux';\n\n\nconst searchTextReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"CHANGE_SEARCH_TEXT\":\n      return action.value;\n    default:\n      return state\n  }\n}\n\nconst specificTripReducer = (state = {}, action) => {\n  // console.log(\"state:\", state, \"action:\", action)\n  let newLuggageArray = [];\n  switch (action.type) {\n    case \"FETCHED_SPECIFIC_TRIP\":\n      return action.trip;\n    case \"FETCHED_SPECIFIC_TRIP_LUGGAGE_LIST\":\n      return action.tripLuggageList;\n    case \"LUGGAGE_ITEM_ADDED\":\n      newLuggageArray = [...state.luggages, action.newItem];\n      return {...state, luggages: newLuggageArray};\n    case \"LUGGAGE_ITEM_DELETED\":\n      newLuggageArray = state.luggages.filter(item => item.id !== action.item.id);\n      return {...state, luggages: newLuggageArray};\n    case \"UPDATE_LUGGAGE\":\n      return [...state.luggages, action.item];\n    default:\n      return state;\n  }\n}\n\nconst tripsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"TRIP_ADDED\":\n      return [...state, action.trip];\n    case \"TRIP_UPDATED\":\n      return state.map(trip => {\n        if (trip.id === action.trip.id) {\n          return action.trip;\n        } else {\n          return trip;\n        }\n      });\n    case \"FETCHED_TRIPS\":\n      return action.trips;\n    default:\n      return state;\n  }\n}\n\nconst loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"FETCHING_TRIPS\":\n      return true;\n    case \"FETCHED_TRIPS\":\n      return false;\n    case \"FETCHING_SPECIFIC_TRIP\":\n      return true;\n    case \"FETCHED_SPECIFIC_TRIP\":\n      return false;\n    case \"FETCHING_SPECIFIC_TRIP_LUGGAGE_LIST\":\n      return true;\n    case \"FETCHED_SPECIFIC_TRIP_LUGGAGE_LIST\":\n      return false;\n    case \"FETCHING_SPECIFIC_TRIP_FLIGHT_INFO_LIST\":\n      return true;\n    case \"FETCHED_SPECIFIC_TRIP_FLIGHT_INFO_LIST\":\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  searchText: searchTextReducer,\n  trips: tripsReducer,\n  loading: loadingReducer,\n  specificTrip: specificTripReducer\n})\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}